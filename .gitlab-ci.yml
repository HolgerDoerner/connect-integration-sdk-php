stages:
  - prepare
  - check
  - test
  - deploy

variables:
  BUILD_PREREQUISITES_CACHE_KEY: "build_pre_${PHP_DC_DOWNLOAD}"

download_prerequisites:
  image: composer:1.8.0
  stage: prepare
  script:
    - if [ ! -d vendor ] || [ ! -f composer.lock ]; then composer install --ignore-platform-reqs; fi
  cache:
    key: $BUILD_PREREQUISITES_CACHE_KEY
    paths:
      - composer.lock
      - vendor
    policy: pull-push
  tags:
    - docker

check_dependencies:
  image: composer:1.8.0
  stage: check
  script:
    - composer audit
  cache:
    key: $BUILD_PREREQUISITES_CACHE_KEY
    paths:
      - composer.lock
      - vendor
    policy: pull
  tags:
    - docker

check_code_style:
  image: composer:1.8.0
  stage: check
  script:
    - composer cs-fixer-dry
  cache:
    key: $BUILD_PREREQUISITES_CACHE_KEY
    paths:
      - vendor
    policy: pull
  tags:
    - docker

run_unit_tests:
  image: composer:1.8.0
  stage: test
  before_script:
    - apk add --no-cache $PHPIZE_DEPS
    - pecl install xdebug
    - docker-php-ext-enable xdebug
  script:
    - composer cover-text
  cache:
    key: $BUILD_PREREQUISITES_CACHE_KEY
    paths:
      - vendor
  tags:
    - docker

run_integration_tests:
  stage: test
  before_script:
    - apk add --no-cache bash curl python3 jq python make g++
    - pip3 install docker-compose==1.23.2 awscli
    - $(aws ecr get-login --region=us-east-1 --no-include-email --registry-ids 602824140852)
  script:
    - cd tools
    - docker-compose down
    - CI_STACK=1 ./initLocalStack.sh
    - docker-compose exec -T php composer integration-tests-local
  cache:
    key: $BUILD_PREREQUISITES_CACHE_KEY
    paths:
      - vendor
  tags:
    - docker
    - ecr
